service: roche
app: roche
org: fedeiglesias

plugins:
  - serverless-plugin-scripts
  - serverless-s3-sync
  - serverless-domain-manager
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  apiGateway:
    shouldStartNameWithService: true

custom:
  domain:
    # AWS domain id
    id: "ZJKMN1QK0FD9S"
    name: fedeiglesias.com
    subdomain: roche.fedeiglesias.com
    # AWS certificate domain arn
    certificateArn: arn:aws:acm:us-east-1:989257975727:certificate/735f4bd6-85db-4cd6-89a2-dcec2bec7d49

  # Bucket name
  s3Bucket: ${self:service}-bucket-client

  s3Sync:
    - bucketName: ${self:custom.s3Bucket}
      localDir: dist
      params:
        - index.html:
            CacheControl: "no-store, no-cache"
        - index.js:
            CacheControl: "no-store, no-cache"

  scripts:
    hooks:
      # Recreate API Gateway & Route53 custom domain for API
      "package:initialize": "sls delete_domain && sls create_domain"
      # Build Client
      "before:deploy:deploy": npm run build

  customDomain:
    domainName: api.${self:custom.domain.subdomain}
    autoDomain: true
    endpointType: "regional"
    securityPolicy: tls_1_2

functions:
  dashboardData:
    handler: api/handler.data
    memorySize: 128
    description: Get Patients data
    events:
      - http:
          path: data
          method: get
          cors: false

resources:
  - ${file(aws/resources/s3-bucket.yml)}
  - ${file(aws/resources/s3-policies.yml)}
  - ${file(aws/resources/cf-distribution.yml)}
  - ${file(aws/resources/dns-records.yml)}
